name: CD

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup NuGet
      uses: nuget/setup-nuget@v1.0.2
      with:
        nuget-version: latest
    - name: Build
      id: base_init
      run: |
        nuget restore
        $(new-object System.Net.WebClient).DownloadFile("https://www.github.com/JFronny/UpTool2/releases/latest/download/Tools.zip", "$($(pwd).Path)\Tools.zip")
        & "C:\Program Files\7-Zip\7z.exe" x .\Tools.zip
        rm Tools.zip
        rm Install.bat
        rm Remove.bat
        & "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe" -noLogo -verbosity:m -p:Configuration=Release
        cp *\bin\Release\netcoreapp3.1\package.zip .
        $file = Get-Item $(Resolve-Path *\bin\Release\netcoreapp3.1\*.exe).Path
        $asmver = $([Reflection.Assembly]::Loadfile($file.DirectoryName + "\" + $file.BaseName + ".dll").GetName().version.ToString())
        echo "::set-output name=vers::$asmver"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.base_init.outputs.vers }}
        release_name: Release ${{ steps.base_init.outputs.vers }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload_release_asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./package.zip
        asset_name: package.zip
        asset_content_type: application/zip
